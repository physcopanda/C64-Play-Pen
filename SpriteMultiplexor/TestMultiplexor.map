ZPRS232StopBitSwitch  =$a9; unused
Multiplex_maininterEx  =$d83; unused
VIC2SpriteBackgroundCollision  =$d01f; unused
Multiplex_CollisionHistory  =$6d0; unused
READST  =$ffb7; unused
VIC2Multicolour_Yellow  =$f; unused
ZPStartBasicLo  =$2b; unused
ZPCurrentOutputDevice  =$9a; unused
VIC2Multicolour_Red  =$a; unused
Multiplex_StartTopInterrupt  =$12a9; ?
CHKIN  =$ffc6; unused
ZPDatasetteEndOfTape  =$96; unused
ZPStartBasicHi  =$2c; unused
CIA1TimerBHi  =$dc07; unused
VIC2Colour_Yellow  =$7; unused
CIA2TimerBHi  =$dd07; unused
FlagUpperLowerCaseChange  =$291; unused
JoystickBits_Fire  =$10; unused
CIA1TimerBLo  =$dc06; unused
VIC2ScreenControlVDefault  =$1b; unused
VIC2InteruptStatus  =$d019
VIC2BorderColour  =$d020
CIA2TimerBLo  =$dd06; unused
ACPTR  =$ffa5; unused
CIA2SerialShift  =$dd0c; unused
BASICTextPrint  =$ab1e; unused
OPEN  =$ffc0; unused
SIDFilterControl  =$d417; unused
Multiplex_TopRasterHeight  =$8
ZPRS232ByteBuffer  =$aa; unused
VIC2Colour_Purple  =$4; unused
SECOND  =$ff93; unused
ZPTapeTimingConstant  = ?; unused
SIDPaddleY  =$d41a; unused
ZPCurrentKeyPressed  =$cb; unused
KERNALROM  =$e000; unused
SIDPaddleX  =$d419; unused
IRQServiceRoutineLo  =$314
VIC2Raster  =$d012
MarkMultiplexorBeginCode  =$d7d; unused
VIC2SpriteXMSB  =$d010
VIC2Multicolour_Purple  =$c; unused
COLORRAM  =$d800; unused
IRQServiceRoutineHi  =$315
VIC2Colour_LightGreen  =$d; unused
UDTIM  =$ffea; unused
VIC2SpriteYBorderBottom  =$fa
CIA2PortBRS232  =$dd01; unused
ZPEndArrayVariableLo  =$31; unused
GETIN  =$ffe4; unused
SIDVoice1FreqHi  =$d401; unused
Multiplex_endIndexInternal2  =$3d
ZPAddressToSave  =$ac; unused
ZPEndArrayVariableHi  =$32; unused
SETLFS  =$ffba; unused
SIDVoice1FreqLo  =$d400; unused
CIA2PortADDR  =$dd02; unused
move  =$1851; ?
CIA1ToDHoursBCD  =$dc0b; unused
KERNALNMIServiceRoutineLo  =$fffa
Multiplex_CollisionIndexes  =$6f8; unused
xoffset  =$45
Multiplex_BottomTriggered  =$c
SIDVoice2FreqLo  =$d407; unused
CIA1PortADDR  =$dc02; unused
SIDVoice3FreqHi  =$d40f; unused
Multiplex_endIndexInternal  =$3d
CLRCHN  =$ffcc; unused
KERNALNMIServiceRoutineHi  =$fffb
VIC2Multicolour_Green  =$d; unused
yoffset  =$46
ZPDatasetteParity  =$9b; unused
SIDVoice2FreqHi  =$d408; unused
SIDVoice3FreqLo  =$d40e; unused
ProcessorPortDefault  =$37; unused
ZPChrGet  =$73; unused
CIOUT  =$ffa8; unused
VIC2ScreenControlHDefault  =$c8; unused
MultiplexSort_MaxSprSorted  =$6
InitialiseMachine  =$18d0; ?
ZPCurrentFileDeviceNumber  =$ba; unused
Multiplex_SpriteFrame  =$17c0; ?
SID  =$d400; unused
SPRITEFRAMESCROFF  =$3f8
ZPDatasetteBufferOffset  =$a6; unused
SETNAM  =$ffbd; unused
Multiplex_endVars  =$3d
Multiplex_IRQServiceRoutineHi  =$ffff
Multiplex_XPosLo  =$1730; ?
VIC2Colour_Green  =$5; unused
VIC2Colour_LightRed  =$a; unused
HEADERex  =$f76a; unused
BASICEntry  =$900
Multiplex_ReverseOrder  =$1
Multiplex_IRQServiceRoutineLo  =$fffe
Multiplex_XPosHi  =$1760; ?
SIDVoice3ADSROutput  =$d41c; unused
ZPEOISerialBusSwitch  =$a3; unused
CHRIN  =$ffcf; unused
VIC2Sprite1Colour  =$d028; unused
ZPProcessorPort  =$1
ZPDatasetteBufferHo  =$b3; unused
JoystickBits_Down  =$2; unused
eMultiplex_MaintainPriority  =$0
ProcessorPortDDRDefault  =$2f
ZPTimeOfDay  =$a0; unused
ZPDatasetteBufferLo  =$b2; unused
Multiplex_spriteHeightTweak  =$17
VIC2Sprite0Colour  =$d027
ZPSerialBusBitCounter  =$a5; unused
CIA2PortBDDR  =$dd03; unused
ProcessorPortAllRAMWithIO  =$25
NMIServiceRoutineHi  =$319
CIA2ToDHoursBCD  =$dd0b; unused
CINT  =$ff81; unused
ZPDatasetteNameWriteCount  =$9f; unused
IOBASE  =$fff3; unused
CIA2PortASerialBusVICBankDefault  =$3; unused
VIC2Sprite3Colour  =$d02a; unused
CIA1PortBDDR  =$dc03; unused
SIDVoice2PulseWidthLo  =$d409; unused
ZPRS232XYTemp  =$97; unused
RESTOR  =$ff8a; unused
VIC2InteruptControl  =$d01a
VIC2Colour_Red  =$2
Multiplex_MaxSprSorted  =$6
ZPDatasetteByteReady  =$9c; unused
NMIServiceRoutineLo  =$318
ZPSerialBusBuffer  =$a4; unused
SCNKEY  =$ff9f; unused
VIC2Sprite2Colour  =$d029; unused
SIDVoice2PulseWidthHi  =$d40a; unused
ZPRS232BitBuffer  =$b5; unused
MinimalIRQServiceRoutine  =$ea81; unused
RDTIM  =$ffde; unused
SCREENRAM  =$400
VIC2Sprite5Colour  =$d02c; unused
SAVE  =$ffd8; unused
Multiplex_xreg  =$3
JoystickBits_Left  =$4; unused
MultiplexSort_indextable  =$d
VIC2Sprite4Colour  =$d02b; unused
SCREEN  =$ffed; unused
Multiplex_AckExitInterrupt  =$1298; ?
ZPKeyBufferLength  =$c6; unused
eMultiplex_LogCollisions  =$0
VIC2Sprite7Colour  =$d02e; unused
SIDVoice3PulseWidthLo  =$d410; unused
countDown3  =$1850; ?
VIC2ScreenColour  =$d021
VIC2Sprite6Colour  =$d02d; unused
countDown2  =$184f; ?
SIDVoice3PulseWidthHi  =$d411; unused
Multiplex_bal  =$a
counterx1  =$3d
counterx2  =$3e
CIA2ToDMinsBCD  =$dd0a; unused
Multiplex_bah  =$b
LISTEN  =$ffb1; unused
VIC2ScreenCharsHeight  =$19; unused
UNLSN  =$ffae; unused
Multiplex_jumplo  =$8
ZPSTVariable  =$90; unused
Multiplex_MaxSpr  =$5
Multiplex_rasterHeight  =$3
BASICSTART  =$801
CIA2TimerBControl  =$dd0f
sortstart  =$133a; ?
CIA1ToDSecsBCD  =$dc09; unused
Multiplex_jumphi  =$9
CIA2TimerAControl  =$dd0e
VECTOR  =$ff8d; unused
CIA1KeyboardRowsJoystickB  =$dc01
Multiplex_maininter  =$d7d; ?
CIA1SerialShift  =$dc0c; unused
ZPRS232BitCounter  =$b4; unused
VIC  =$d000; unused
DefaultLOADRoutine  =$f4a5; unused
CIA1TimerBControl  =$dc0f
ZPRS232BusBuffer  =$a7; unused
Multiplex_yreg  =$4
MEMTOP  =$ff99; unused
CIA1TimerAControl  =$dc0e
xspeed  =$43
Multiplex_ISFP8  =$eae
ZPStopKeyIndicator  =$91; unused
Multiplex_areg  =$2
Multiplex_ISFP9  =$f1a
KERNALIRQServiceRoutineHi  =$ffff
Multiplex_CollisionCounter  =$680; unused
Multiplex_ISFP6  =$e6c
VIC2SpritePriority  =$d01b
Multiplex_ISFP7  =$e8d
Multiplex_ISFP4  =$e2a
siny  =$1c00; ?
SIDVoice1PulseWidthLo  =$d402; unused
Multiplex_ISFP5  =$e4b
CyclesPerSecondPALC64  =$f08a0; unused
sinx  =$1a00; ?
KERNALIRQServiceRoutineLo  =$fffe
VIC2Sprite5X  =$d00a; unused
Multiplex_ISFP2  =$de8
VIC2Sprite7Y  =$d00f; unused
VIC2Sprite5Y  =$d00b; unused
yspeed  =$44
Multiplex_ISFP3  =$e09
VIC2Sprite7X  =$d00e; unused
VIC2Sprite1X  =$d002; unused
VIC2Sprite3Y  =$d007; unused
ZPDatasetteTiming  =$92; unused
VIC2MemorySetup  =$d018; unused
VIC2Sprite1Y  =$d003; unused
SIDVoice1PulseWidthHi  =$d403; unused
Multiplex_ISFP1  =$dc7
VIC2Sprite3X  =$d006; unused
VIC2ExtraBackgroundColour3  =$d024; unused
VIC2Colour_LightGrey  =$f; unused
VIC2ExtraBackgroundColour2  =$d023; unused
Multiplexor_DebugBorder  =$1
CLOSE  =$ffc3; unused
VIC2ExtraBackgroundColour1  =$d022; unused
SaveRoutineHi  =$333; unused
sinxhi  =$1b00; ?
CIA1KeyboardColumnJoystickA  =$dc00; unused
Multiplex_exitinter  =$1290; ?
ProcessorPortAllRAM  =$20; unused
VIC2SpriteYBorderTop24  =$36; unused
SaveRoutineLo  =$332; unused
CLALL  =$ffe7; unused
STOP  =$ffe1; unused
Multiplex_ISFP16  =$124d
Multiplex_ISFP15  =$11d8
VIC2Colour_Blue  =$6; unused
Multiplex_ISFP14  =$1163
Multiplex_ISFP13  =$10ee
Multiplex_items  =$30
Multiplex_ISFP12  =$1079
Multiplex_ISFP11  =$1004
ZPSerialBusCacheStatus  =$94; unused
Multiplex_ISFP10  =$f8f
VIC2MemorySetupDefault  =$15; unused
MultiplexExt_LastIRQ  =$d00
CIA2PortASerialBusVICBank  =$dd00; unused
VIC2ExtraSpriteColour2  =$d026; unused
VIC2ExtraSpriteColour1  =$d025; unused
MultiplexSort_YPos  =$1700; ?
ZPStartStringVariableLo  =$33; unused
ZPDisplaySystemErrorSwitch  =$9d; unused
VIC2ScreenCharsWidth  =$28; unused
SIDVoice3Control  =$d412; unused
BASICROM  =$a000; unused
SIDVoice2Control  =$d40b; unused
Multiplex_spritepointer  =$7f8
ZPStartStringVariableHi  =$34; unused
SIDVoice1Control  =$d404; unused
ZPRS232OutByte  =$9e; unused
ProcessorStack  =$100; unused
Multiplex_SetSpritePointer  =$1679; unused
CIA1ToDMinsBCD  =$dc0a; unused
DefaultNMIServiceRoutine  =$fe47; unused
CIA2  =$dd00; unused
VIC2Colour_Black  =$0
RS232OutputBufferHi  =$fa; unused
DefaultSTOPVector  =$f6ed; unused
ZPSerialBusCache  =$95; unused
VIC2SpriteSpriteCollision  =$d01e; unused
SIDVolumeFilter  =$d418
CIA1  =$dc00; unused
CIA2ToDSecsBCD  =$dd09; unused
Multiplex_indextable  =$d
RS232OutputBufferLo  =$f9; unused
VIC2SpriteXBorderRight  =$158; unused
VIC2SpriteYBorderTop  =$32; unused
Start  =$c00; ?
VIC2ScreenControlH  =$d016; unused
SIDVoice1AttackDecay  =$d405; unused
VIC2Multicolour_Blue  =$e; unused
TKSA  =$ff96; unused
SIDVoice2SustainRelease  =$d40d; unused
RS232InputBufferHi  =$f8; unused
VIC2ScreenControlV  =$d011
Multiplex_DiscardSpritesYPos  =$ff
ZPPrevKeyPressed  =$c5; unused
CLRSCR  =$e544; unused
VIC2Colour_LightBlue  =$e; unused
SIDVoice3SustainRelease  =$d414; unused
RS232InputBufferLo  =$f7; unused
TALK  =$ffb4; unused
SETTIM  =$ffdb; unused
SETTMO  =$ffa2; unused
VIC2Colour_Grey  =$c; unused
VIC2Multicolour_Black  =$8; unused
VIC2SpriteSizeY  =$15; unused
VIC2SpriteSizeX  =$18; unused
SIDVoice1SustainRelease  =$d406; unused
LOAD  =$ffd5; unused
VIC2LightPenX  =$d013; unused
VIC2LightPenY  =$d014; unused
VIC2SpriteEnable  =$d015
VIC2SpriteDoubleWidth  =$d01d
BRKServiceRoutineLo  =$316; unused
SIDVoice3WaveformOutput  =$d41b; unused
xdif  =$41
CIA2ToD10thSecsBCD  =$dd08; unused
BRKServiceRoutineHi  =$317; unused
Multiplex_EnableEarlyOut  =$1
CIA1TimerAHi  =$dc05; unused
Multiplex_intNextSpr7  =$11fd; unused
RAMTAS  =$ff87; unused
VIC2SpriteDoubleHeight  =$d017
CIA1ToD10thSecsBCD  =$dc08; unused
Multiplex_intNextSpr6  =$1188; unused
ZPFlagCursorFlash  =$cc; unused
Multiplex_intNextSpr5  =$1113; unused
VIC2Multicolour_Cyan  =$b; unused
CIA2TimerAHi  =$dd05; unused
Multiplex_intNextSpr4  =$109e; unused
CIA1TimerALo  =$dc04; unused
Multiplex_intNextSpr3  =$1029; unused
ZPRS232Parity  =$ab; unused
Multiplex_intNextSpr2  =$fb4; unused
Multiplex_intNextSpr1  =$f3f; unused
ZPAddressToLoad  =$ae; unused
SIDVoice2AttackDecay  =$d40c; unused
CIA2TimerALo  =$dd04; unused
Multiplex_intNextSpr0  =$eca
STOPVectorHi  =$329; unused
JoystickBits_Up  =$1; unused
KERNALColdStartResetHi  =$fffd; unused
ZPEndBasicLo  =$37; unused
STOPVectorLo  =$328; unused
KERNALColdStartResetLo  =$fffc; unused
ZPEndBasicHi  =$38; unused
DefaultSaveRoutine  =$f5ed; unused
MarkMultiplexorEndCode  =$184e; unused
SPRITEFRAME  =$7f8
CHKOUT  =$ffc9; unused
countDown  =$184e; ?
ZPRS232BusBitCounter  =$a8; unused
VIC2SpriteXBorderLeft38  =$1f; unused
SIDFilterCutoffFreqLo  =$d415; unused
CIA1InterruptControl  =$dc0d
NMIRet  =$c8b; ?
SIDFilterCutoffFreqHi  =$d416; unused
CIA2InterruptControl  =$dd0d
countery1  =$3f
countery2  =$40
Multiplex_Sortlo  =$17f0; ?
UNTLK  =$ffab; unused
VIC2SpriteMulticolour  =$d01c
ydif  =$42
ZPNumFilesOpen  =$98; unused
Multiplex_Sorthi  =$181f; ?
VIC2Colour_Brown  =$9; unused
VIC2Colour_DarkGrey  =$b; unused
ZPProcessorPortDDR  =$0
VIC2SpriteXBorderLeft  =$18; unused
Multiplex_YPos  =$1700; ?
ZPStartVariableLo  =$2d; unused
PLOT  =$fff0; unused
VIC2Multicolour_White  =$9; unused
Multiplex_intNextSpr0Reset  =$efe; unused
ZPStartVariableHi  =$2e; unused
Multiplex_Sort  =$12f3; ?
VIC2Colour_Cyan  =$3
SIDVoice3AttackDecay  =$d413; unused
COLOURRAM  =$d800; unused
JoystickBits_Right  =$8; unused
ZPStartArrayVariableLo  =$2f; unused
ZPCurrentStringVariableLo  =$35; unused
LoadRoutineLo  =$330; unused
MACROMultiplex_SortBlockByteLength  =$12; ?
Multiplex_counter  =$7
IOINIT  =$ff84; unused
MEMBOT  =$ff9c; unused
ZPStartArrayVariableHi  =$30; unused
Multiplex_Colour  =$1790; ?
ZPCurrentStringVariableHi  =$36; unused
LoadRoutineHi  =$331; unused
CHROUT  =$ffd2; unused
SETMSG  =$ff90; unused
Multiplex_InitSort  =$12c3; ?
Multiplex_VarBase  =$2
VIC2Sprite4X  =$d008; unused
MemoryMappedIOArea1  =$de00; unused
VIC2Sprite6Y  =$d00d; unused
VIC2Sprite4Y  =$d009; unused
VIC2Colour_Orange  =$8; unused
VIC2Sprite6X  =$d00c; unused
DefaultIRQServiceRoutine  =$ea31; unused
VIC2Sprite0X  =$d000
VIC2Sprite2Y  =$d005; unused
VIC2Colour_White  =$1
ZPLoadVerify  =$93; unused
MemoryMappedIOArea2  =$df00; unused
ZPCurrentInputDevice  =$99; unused
VIC2Sprite0Y  =$d001
VIC2Sprite2X  =$d004; unused
v+3=$0
v  =$400000
v  =$600000
v  =$700000
v  =$780000
v  =$7c0000
v  =$7e0000
v  =$7f0000
v  =$7f8000
v  =$7fc000
v  =$7f8000
v  =$7e0000
v  =$7e0000
v  =$660000
v  =$430000
v  =$30000
v  =$18000
v  =$18000
v+3=$c000
v+3=$c000
v+3=$0
v  =$ffffff
v  =$ffffff
v  =$e00007
v  =$e00007
v  =$e00007
v  =$e00007
v  =$e00007
v  =$e00007
v  =$e03807
v  =$e07c07
v  =$e07c07
v  =$e07c07
v  =$e03807
v  =$e00007
v  =$e00007
v  =$e00007
v  =$e00007
v  =$e00007
v  =$e00007
v  =$ffffff
v  =$ffffff
v  =$ffffff
v  =$ffffff
v  =$f0180f
v  =$e81817
v  =$e41827
v  =$e21847
v  =$e11887
v  =$e09907
v  =$e07e07
v  =$e07c07
v  =$ffffff
v  =$e07c07
v  =$e07c07
v  =$e09207
v  =$e11107
v  =$e21087
v  =$e41047
v  =$e81027
v  =$f01017
v  =$ffffff
v  =$ffffff
3  =$c3a
2  =$c79
skipToSecond  =$d13; ?
fiddle  =$d5b
off1  =$d2d
skipOff1  =$d3a; ?
skipToFourth  =$d49; ?
fiddle2  =$d64; ?
skipToThird  =$d40; ?
notYet  =$d28; ?
over  =$d6a; ?
morethan8  =$da6; ?
switch  =$ec4; ?
jumplo  =$1275; ?
jumphi  =$127e; ?
dospr2  =$e5b; ?
dospr3  =$e3a; ?
dospr0  =$e9d; ?
dospr1  =$e7c; ?
dospr6  =$dd7; ?
dospr7  =$db6
dospr4  =$e19; ?
dospr5  =$df8; ?
over  =$ebe; ?
activatetab  =$1287; ?
spriteIndex  =$7
spriteIndexReal  =$0
Multiplex_LBLISFP1  =$dc7
spriteIndex  =$6
spriteIndexReal  =$1
Multiplex_LBLISFP1  =$de8
spriteIndex  =$5
spriteIndexReal  =$2
Multiplex_LBLISFP1  =$e09
spriteIndex  =$4
spriteIndexReal  =$3
Multiplex_LBLISFP1  =$e2a
spriteIndex  =$3
spriteIndexReal  =$4
Multiplex_LBLISFP1  =$e4b
spriteIndex  =$2
spriteIndexReal  =$5
Multiplex_LBLISFP1  =$e6c
spriteIndex  =$1
spriteIndexReal  =$6
Multiplex_LBLISFP1  =$e8d
spriteIndex  =$0
spriteIndexReal  =$7
Multiplex_LBLISFP1  =$eae
next0  =$eda; ?
no0  =$f2f; ?
skipSprite  =$f37; unused
currentIRQEnd  =$eeb; unused
spriteIndex  =$0
intExitInter0  =$f3c; unused
Multiplex_nextSpriteFunction  =$f3f; ?
yes0  =$f34; ?
blit0  =$f06; ?
Multiplex_inter0  =$efe; ?
spriteIndexReal  =$7
Multiplex_LBLISFP9  =$f1a
otherCheck  =$eca; unused
next0  =$f4f; ?
no0  =$fa4; ?
skipSprite  =$fac; unused
currentIRQEnd  =$f60; unused
spriteIndex  =$1
intExitInter0  =$fb1; unused
yes0  =$fa9; ?
Multiplex_nextSpriteFunction  =$fb4; ?
blit0  =$f7b; ?
Multiplex_inter0  =$f73; ?
spriteIndexReal  =$6
otherCheck  =$f3f; unused
Multiplex_LBLISFP9  =$f8f
next0  =$fc4; ?
currentIRQEnd  =$fd5; unused
skipSprite  =$1021; unused
no0  =$1019; ?
spriteIndex  =$2
Multiplex_inter0  =$fe8; ?
blit0  =$ff0; ?
Multiplex_nextSpriteFunction  =$1029; ?
yes0  =$101e; ?
intExitInter0  =$1026; unused
spriteIndexReal  =$5
Multiplex_LBLISFP9  =$1004
otherCheck  =$fb4; unused
next0  =$1039; ?
currentIRQEnd  =$104a; unused
skipSprite  =$1096; unused
no0  =$108e; ?
spriteIndex  =$3
Multiplex_inter0  =$105d; ?
blit0  =$1065; ?
yes0  =$1093; ?
Multiplex_nextSpriteFunction  =$109e; ?
intExitInter0  =$109b; unused
spriteIndexReal  =$4
otherCheck  =$1029; unused
Multiplex_LBLISFP9  =$1079
next0  =$10ae; ?
skipSprite  =$110b; unused
currentIRQEnd  =$10bf; unused
no0  =$1103; ?
spriteIndex  =$4
Multiplex_inter0  =$10d2; ?
Multiplex_nextSpriteFunction  =$1113; ?
yes0  =$1108; ?
blit0  =$10da; ?
intExitInter0  =$1110; unused
spriteIndexReal  =$3
Multiplex_LBLISFP9  =$10ee
otherCheck  =$109e; unused
next0  =$1123; ?
skipSprite  =$1180; unused
currentIRQEnd  =$1134; unused
no0  =$1178; ?
spriteIndex  =$5
Multiplex_inter0  =$1147; ?
yes0  =$117d; ?
Multiplex_nextSpriteFunction  =$1188; ?
blit0  =$114f; ?
intExitInter0  =$1185; unused
spriteIndexReal  =$2
otherCheck  =$1113; unused
Multiplex_LBLISFP9  =$1163
next0  =$1198; ?
no0  =$11ed; ?
currentIRQEnd  =$11a9; unused
skipSprite  =$11f5; unused
spriteIndex  =$6
blit0  =$11c4; ?
Multiplex_nextSpriteFunction  =$11fd; ?
yes0  =$11f2; ?
Multiplex_inter0  =$11bc; ?
intExitInter0  =$11fa; unused
spriteIndexReal  =$1
Multiplex_LBLISFP9  =$11d8
otherCheck  =$1188; unused
next0  =$120d; ?
no0  =$1262; ?
currentIRQEnd  =$121e; unused
skipSprite  =$126a; unused
spriteIndex  =$7
blit0  =$1239; ?
yes0  =$1267; ?
Multiplex_nextSpriteFunction  =$1272; ?
Multiplex_inter0  =$1231; ?
intExitInter0  =$126f; unused
spriteIndexReal  =$0
otherCheck  =$11fd; unused
Multiplex_LBLISFP9  =$124d
storeRaster  =$12bf; ?
1  =$12c8
2  =$12d8
over  =$12ed; ?
over2  =$134c
over0  =$132a; ?
over1  =$133a; ?
exit  =$1329; ?
back5  =$1384
back4  =$1372
back7  =$13a8
back6  =$1396
back1  =$133c
back0  =$132c
back3  =$1360
back2  =$134e
back9  =$13cc
back8  =$13ba
over47  =$1676; unused
l1  =$1319
l2  =$1327; ?
back19  =$1480
back38  =$15d6
back18  =$146e
back39  =$15e8
back11  =$13f0
back30  =$1546
back10  =$13de
back31  =$1558
back13  =$1414
back32  =$156a
back12  =$1402
back33  =$157c
back15  =$1438
back34  =$158e
back14  =$1426
back35  =$15a0
back17  =$145c
back36  =$15b2
back16  =$144a
back37  =$15c4
back28  =$1522
back29  =$1534
back20  =$1492
back43  =$1630
back21  =$14a4
back42  =$161e
back22  =$14b6
back41  =$160c
back23  =$14c8
back40  =$15fa
back24  =$14da
back25  =$14ec
back46  =$1666; unused
back26  =$14fe
back45  =$1654
back27  =$1510
back44  =$1642
over2  =$134c; ?
over1  =$133a; unused
back1  =$133c
forward  =$133c
backPos  =$132c
index  =$1
over1  =$134c; unused
over2  =$135e; ?
back1  =$134e
forward  =$134e
backPos  =$133c
index  =$2
over1  =$135e; unused
over2  =$1370; ?
back1  =$1360
forward  =$1360
backPos  =$134e
index  =$3
over2  =$1382; ?
over1  =$1370; unused
back1  =$1372
forward  =$1372
backPos  =$1360
index  =$4
over2  =$1394; ?
over1  =$1382; unused
back1  =$1384
forward  =$1384
backPos  =$1372
index  =$5
over1  =$1394; unused
over2  =$13a6; ?
back1  =$1396
forward  =$1396
backPos  =$1384
index  =$6
over1  =$13a6; unused
over2  =$13b8; ?
back1  =$13a8
forward  =$13a8
backPos  =$1396
index  =$7
over2  =$13ca; ?
over1  =$13b8; unused
back1  =$13ba
forward  =$13ba
backPos  =$13a8
index  =$8
over2  =$13dc; ?
over1  =$13ca; unused
back1  =$13cc
forward  =$13cc
backPos  =$13ba
index  =$9
over1  =$13dc; unused
over2  =$13ee; ?
back1  =$13de
forward  =$13de
backPos  =$13cc
index  =$a
over1  =$13ee; unused
over2  =$1400; ?
back1  =$13f0
forward  =$13f0
backPos  =$13de
index  =$b
over2  =$1412; ?
over1  =$1400; unused
back1  =$1402
forward  =$1402
backPos  =$13f0
index  =$c
over2  =$1424; ?
over1  =$1412; unused
back1  =$1414
forward  =$1414
backPos  =$1402
index  =$d
over1  =$1424; unused
over2  =$1436; ?
back1  =$1426
forward  =$1426
backPos  =$1414
index  =$e
over1  =$1436; unused
over2  =$1448; ?
back1  =$1438
forward  =$1438
backPos  =$1426
index  =$f
over2  =$145a; ?
over1  =$1448; unused
back1  =$144a
forward  =$144a
backPos  =$1438
index  =$10
over2  =$146c; ?
over1  =$145a; unused
back1  =$145c
forward  =$145c
backPos  =$144a
index  =$11
over1  =$146c; unused
over2  =$147e; ?
back1  =$146e
forward  =$146e
backPos  =$145c
index  =$12
over1  =$147e; unused
over2  =$1490; ?
back1  =$1480
forward  =$1480
backPos  =$146e
index  =$13
over2  =$14a2; ?
over1  =$1490; unused
back1  =$1492
forward  =$1492
backPos  =$1480
index  =$14
over2  =$14b4; ?
over1  =$14a2; unused
back1  =$14a4
forward  =$14a4
backPos  =$1492
index  =$15
over1  =$14b4; unused
over2  =$14c6; ?
back1  =$14b6
forward  =$14b6
backPos  =$14a4
index  =$16
over1  =$14c6; unused
over2  =$14d8; ?
back1  =$14c8
forward  =$14c8
backPos  =$14b6
index  =$17
over2  =$14ea; ?
over1  =$14d8; unused
back1  =$14da
forward  =$14da
backPos  =$14c8
index  =$18
over2  =$14fc; ?
over1  =$14ea; unused
back1  =$14ec
forward  =$14ec
backPos  =$14da
index  =$19
over1  =$14fc; unused
over2  =$150e; ?
back1  =$14fe
forward  =$14fe
backPos  =$14ec
index  =$1a
over1  =$150e; unused
over2  =$1520; ?
back1  =$1510
forward  =$1510
backPos  =$14fe
index  =$1b
over2  =$1532; ?
over1  =$1520; unused
back1  =$1522
forward  =$1522
backPos  =$1510
index  =$1c
over2  =$1544; ?
over1  =$1532; unused
back1  =$1534
forward  =$1534
backPos  =$1522
index  =$1d
index  =$1e
backPos  =$1534
forward  =$1546
back1  =$1546
over1  =$1544; unused
over2  =$1556; ?
index  =$1f
backPos  =$1546
forward  =$1558
back1  =$1558
over1  =$1556; unused
over2  =$1568; ?
index  =$20
backPos  =$1558
forward  =$156a
back1  =$156a
over2  =$157a; ?
over1  =$1568; unused
index  =$21
backPos  =$156a
forward  =$157c
back1  =$157c
over2  =$158c; ?
over1  =$157a; unused
index  =$22
backPos  =$157c
forward  =$158e
back1  =$158e
over1  =$158c; unused
over2  =$159e; ?
index  =$23
backPos  =$158e
forward  =$15a0
back1  =$15a0
over1  =$159e; unused
over2  =$15b0; ?
index  =$24
backPos  =$15a0
forward  =$15b2
back1  =$15b2
over2  =$15c2; ?
over1  =$15b0; unused
index  =$25
backPos  =$15b2
forward  =$15c4
back1  =$15c4
over2  =$15d4; ?
over1  =$15c2; unused
index  =$26
backPos  =$15c4
forward  =$15d6
back1  =$15d6
over1  =$15d4; unused
over2  =$15e6; ?
index  =$27
backPos  =$15d6
forward  =$15e8
back1  =$15e8
over1  =$15e6; unused
over2  =$15f8; ?
index  =$28
backPos  =$15e8
forward  =$15fa
back1  =$15fa
over2  =$160a; ?
over1  =$15f8; unused
index  =$29
backPos  =$15fa
forward  =$160c
back1  =$160c
over2  =$161c; ?
over1  =$160a; unused
index  =$2a
backPos  =$160c
forward  =$161e
back1  =$161e
over1  =$161c; unused
over2  =$162e; ?
index  =$2b
backPos  =$161e
forward  =$1630
back1  =$1630
over1  =$162e; unused
over2  =$1640; ?
index  =$2c
backPos  =$1630
forward  =$1642
back1  =$1642
over2  =$1652; ?
over1  =$1640; unused
index  =$2d
backPos  =$1642
forward  =$1654
back1  =$1654
over2  =$1664; ?
over1  =$1652; unused
index  =$2e
backPos  =$1654
forward  =$1666; unused
back1  =$1666
over1  =$1664; unused
over2  =$1676; ?
1  =$1856
exit  =$18b9; ?
smpreviousStack1  =$1944; ?
smpreviousStack2  =$1947; ?
initNMI  =$1952; ?
initIRQ  =$194b; ?
w1  =$192c
