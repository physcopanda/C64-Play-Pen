;MusicPlayerTest test code
;Displays statistics about raster time so any code changes can be tested for CPU optimisation.

!source "../stdlib/stdlib.a"
!to "MusicPlayerTest.prg", cbm
!sal
!sl "MusicPlayerTest.map"
!svl "MusicPlayerTest.lbl"
!cpu 6510
!ct pet

!source "../stdlib/BASICEntry80d.a"

*=BASICEntry
	lda #ProcessorPortDefault
	jsr InitialiseMachine

	; Init the music
	lda #0
	jsr MusicPlayerInit

	; Init the screen
	jsr CLRSCR
	lda #VIC2MemorySetupDefault
	sta VIC2MemorySetup
	lda #%11
	sta CIA2PortASerialBusVICBank
	lda #VIC2ScreenControlHDefault
	sta VIC2ScreenControlH
	lda #VIC2ScreenControlVDefault
	sta VIC2ScreenControlV

.screenPos = 100
	; Start the main loop
.main
	lda #.screenPos
.l1
	cmp VIC2Raster
	bne .l1
	lda #VIC2Colour_White
	sta VIC2BorderColour
	jsr MusicPlayerPlay
	lda #VIC2Colour_Black
	sta VIC2BorderColour

	lda VIC2Raster
	sec
	sbc #.screenPos

	inc AverageTabPos
	bne .o3
	ldx #1
	stx AverageValid
.o3
	ldx AverageTabPos
	sta AverageTable,x

	; Remember the maximum raster time used
	cmp MaximumTime
	bcc .o4
	sta MaximumTime
.o4

	lda AverageValid
	beq .o2

	; Now calculate the average
	lda #0
	tay
	tax
.l2
	clc
	adc AverageTable,x
	bcc .o1
	iny
.o1
	inx
	bne .l2

	; We have 256 entries so we can just use the high byte :)
	sty AverageCalculated
	lda .valDiv10,y
	clc
	adc #'0'
	sta SCREENRAM
	lda .valMod10,y
	clc
	adc #'0'
	sta SCREENRAM+1

	; Enable the next line to have the test stop when the average is calculated. Useful for tests over a known period of time.
	jmp *

.o2

	ldy MaximumTime
	lda .valDiv10,y
	clc
	adc #'0'
	sta SCREENRAM+40
	lda .valMod10,y
	clc
	adc #'0'
	sta SCREENRAM+41

	; Check for fire resetting the maximum time
	lda #%10000
	bit CIA1KeyboardColumnJoystickA
	bne .o5
	lda #0
	sta MaximumTime
.o5

	lda #VIC2Colour_Black
	sta VIC2BorderColour
	jmp .main

*=$900
maxBlocks = $40
;MusicPlayer_DebugBorder = 1
!source "../MusicEditor/MusicPlayer.a"
*=MusicPlayerDataStart
; Test result: 14 & 25
; After opt: 10 & 18
!bin "TestMusic.prg",,MusicPlayerCodeToDataOffset+2
; Test result: 18 & 30
; After opt: 14 & 25
;!bin "TestMusic2.prg",,MusicPlayerCodeToDataOffset+2
; Test result: Not taken
; After opt: 11 & 20
;!bin "TestMusic3.prg",,MusicPlayerCodeToDataOffset+2

; Table for the raster data so a moving average can be calculated
AverageTable !fill 256
AverageTabPos !by 0
AverageValid !by 0
AverageCalculated !by 0
MaximumTime !by 0

.valDiv10
	!for .table1,50 {!by <((.table1-1) / 10) }
.valMod10
	!by 0,1,2,3,4,5,6,7,8,9
	!by 0,1,2,3,4,5,6,7,8,9
	!by 0,1,2,3,4,5,6,7,8,9
	!by 0,1,2,3,4,5,6,7,8,9
	!by 0,1,2,3,4,5,6,7,8,9

!source "../stdlib/Initialise.a"
